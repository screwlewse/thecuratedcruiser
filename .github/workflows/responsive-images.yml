name: Generate Responsive Images

on:
  push:
    paths:
      - 'images/src/**'  # Only trigger when files in images/src directory change
    branches: [ main ]
  pull_request:
    paths:
      - 'images/src/**'  # Only trigger when files in images/src directory change
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          npm init -y
          npm install sharp

      - name: Process images
        run: |
          mkdir -p images/processed

          # Create a Node.js script to process images
          cat > process-images.js << 'EOF'
          const fs = require('fs');
          const path = require('path');
          const sharp = require('sharp');

          const sourceDir = 'images/src';
          const outputDir = 'images/processed';

          // Make sure output directory exists
          if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir, { recursive: true });
          }

          // Get all image files from the source directory
          const imageFiles = fs.readdirSync(sourceDir)
            .filter(file => /\.(jpg|jpeg|png)$/i.test(file));

          // Process each image
          imageFiles.forEach(file => {
            const filePath = path.join(sourceDir, file);
            const fileNameWithoutExt = path.parse(file).name;
            const fileExt = path.parse(file).ext;

            // Create small version (480px width)
            sharp(filePath)
              .resize(480)
              .toFile(path.join(outputDir, `${fileNameWithoutExt}-small${fileExt}`))
              .catch(err => console.error(`Error processing ${file} for small size:`, err));

            // Create medium version (768px width)
            sharp(filePath)
              .resize(768)
              .toFile(path.join(outputDir, `${fileNameWithoutExt}-medium${fileExt}`))
              .catch(err => console.error(`Error processing ${file} for medium size:`, err));

            // Create large version (1200px width)
            sharp(filePath)
              .resize(1200)
              .toFile(path.join(outputDir, `${fileNameWithoutExt}-large${fileExt}`))
              .catch(err => console.error(`Error processing ${file} for large size:`, err));

            // Create optimized original
            sharp(filePath)
              .jpeg({ quality: 85 })
              .toFile(path.join(outputDir, file))
              .catch(err => console.error(`Error optimizing ${file}:`, err));
          });

          console.log(`Processed ${imageFiles.length} images`);
          EOF

          # Run the image processing script
          node process-images.js

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add images/processed
          git commit -m "Generate responsive images" || echo "No changes to commit"
          git push